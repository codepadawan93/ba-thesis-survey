{"version":3,"sources":["components/InputName.js","components/FillSurvey.js","components/ThankYou.js","App.js","serviceWorker.js","index.js"],"names":["InputName","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","NAME_REGEX","storage","window","localStorage","handleClick","e","preventDefault","validateName","state","userName","setItem","setState","shouldRedirect","alert","handleChange","_e$target","target","name","value","defineProperty","test","shouldRedirectImmediately","getItem","_this2","react_default","a","createElement","className","type","id","placeholder","onChange","onClick","Redirect","to","Component","FillSurvey","REQUIRED_SCORES","API_URL","API_POST","renderItems","displayAttractions","map","attraction","i","key","nrCrt","length","substring","description","renderStars","fetchItems","asyncToGenerator","regenerator_default","mark","_callee","res","json","wrap","_context","prev","next","fetch","sent","success","objectSpread","attractions","t0","concat","stop","_ref2","_callee2","_this$state$position","latitude","longitude","data","_context2","validateScores","position","location","scores","method","headers","Content-Type","body","JSON","stringify","removeItem","error","_x","apply","arguments","search","property","replace","toLowerCase","filter","RegExp","setLocation","context","assertThisInitialized","navigator","geolocation","getCurrentPosition","coords","handleRate","rating","newScoreStates","scoreStates","score","attractionId","toConsumableArray","_score","updateScore","nativeEvent","offsetX","offsetWidth","children","Math","ceil","scrollToTop","ref","current","scrollIntoView","behavior","renderScoresMessage","renderToolbox","currentRef","j","currentScore","starClass","React","createRef","searchNrCrt","searchName","searchDescription","width","ThankYou","props","href","App","BrowserRouter","Switch","Route","exact","path","component","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4d55052b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass InputName extends Component {\r\n  NAME_REGEX = /^[a-zA-Z0-9\\-]+$/;\r\n  storage = window.localStorage;\r\n  constructor() {\r\n    super();\r\n    let shouldRedirectImmediately = false;\r\n    const userName = this.storage.getItem(\"userName\");\r\n    if (userName) {\r\n      shouldRedirectImmediately = true;\r\n    }\r\n    this.state = {\r\n      userName: \"\",\r\n      shouldRedirect: shouldRedirectImmediately\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12 spacer\" />\r\n        <div className=\"col-md-4 offset-md-4\">\r\n          <form className=\"panel\">\r\n            <div className=\"form-group\">\r\n              <h1>Enter your name:</h1>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"userName\"\r\n                name=\"userName\"\r\n                placeholder=\"Enter name\"\r\n                value={this.state.userName}\r\n                onChange={e => this.handleChange(e)}\r\n              />\r\n            </div>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary\"\r\n              onClick={e => this.handleClick(e)}\r\n            >\r\n              Submit\r\n            </button>\r\n          </form>\r\n          {this.state.shouldRedirect ? <Redirect to=\"/fill-survey\" /> : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  handleClick = e => {\r\n    e.preventDefault();\r\n    if (this.validateName(this.state.userName)) {\r\n      this.storage.setItem(\"userName\", this.state.userName);\r\n      this.setState({ shouldRedirect: true });\r\n    } else {\r\n      alert(\"Invalid name provided, please try again.\");\r\n    }\r\n  };\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n  validateName = name => this.NAME_REGEX.test(name);\r\n}\r\n\r\nexport default InputName;\r\n","import React, { Component } from \"react\";\r\nimport { Router, Link, Route, Redirect } from \"react-router-dom\";\r\n\r\nclass FillSurvey extends Component {\r\n  REQUIRED_SCORES = 15;\r\n  API_URL = \"/api/attractions\";\r\n  API_POST = \"/api/response\";\r\n  constructor() {\r\n    super();\r\n    const userName = window.localStorage.getItem(\"userName\");\r\n    this.currentRef = React.createRef();\r\n    this.state = {\r\n      position: [],\r\n      userName: userName,\r\n      attractions: [],\r\n      displayAttractions: [],\r\n      scores: [],\r\n      scoreStates: [],\r\n      search: {\r\n        searchNrCrt: \"\",\r\n        searchName: \"\",\r\n        searchDescription: \"\"\r\n      },\r\n      shouldRedirect: false\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          {this.renderScoresMessage()}\r\n          <h1 ref={this.currentRef} className=\"panel\">\r\n            Complete your survey{\" \"}\r\n          </h1>\r\n          <table className=\"table table-hover panel\">\r\n            <thead>\r\n              <tr>\r\n                <th>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    placeholder=\"Nr. Crt\"\r\n                    name=\"searchNrCrt\"\r\n                    onChange={e => this.handleChange(e)}\r\n                    value={this.state.search.nrCrt}\r\n                  />\r\n                </th>\r\n                <th>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    placeholder=\"Name\"\r\n                    name=\"searchName\"\r\n                    onChange={e => this.handleChange(e)}\r\n                    value={this.state.search.name}\r\n                  />\r\n                </th>\r\n                <th>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    placeholder=\"Description\"\r\n                    name=\"searchDescription\"\r\n                    onChange={e => this.handleChange(e)}\r\n                    value={this.state.search.description}\r\n                  />\r\n                </th>\r\n                <th />\r\n              </tr>\r\n            </thead>\r\n            <thead>\r\n              <tr>\r\n                <th width=\"8%\">#</th>\r\n                <th width=\"20%\">Name</th>\r\n                <th width=\"60%\">Description</th>\r\n                <th width=\"12%\">Your rating</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{this.renderItems()}</tbody>\r\n          </table>\r\n          {this.renderToolbox()}\r\n          {this.state.shouldRedirect ? <Redirect to=\"/thank-you\" /> : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  componentWillMount() {\r\n    this.fetchItems();\r\n    this.setLocation();\r\n  }\r\n  renderItems = () => {\r\n    return this.state.displayAttractions.map((attraction, i) => {\r\n      if (!attraction) {\r\n        return;\r\n      }\r\n      return (\r\n        <tr key={attraction.nrCrt}>\r\n          <td>{attraction.nrCrt}</td>\r\n          <td>\r\n            {attraction.name.length >= 80\r\n              ? attraction.name.substring(0, 80) + \"...\"\r\n              : attraction.name}\r\n          </td>\r\n          <td>\r\n            {attraction.description.length >= 180\r\n              ? attraction.description.substring(0, 180) + \"...\"\r\n              : attraction.description}\r\n          </td>\r\n          <td className=\"rating-stars\">{this.renderStars(i)}</td>\r\n        </tr>\r\n      );\r\n    });\r\n  };\r\n  fetchItems = async () => {\r\n    try {\r\n      const res = await fetch(this.API_URL);\r\n      const json = await res.json();\r\n      if (json.success) {\r\n        this.setState({\r\n          ...this.state,\r\n          attractions: json.attractions,\r\n          displayAttractions: json.attractions\r\n        });\r\n      }\r\n    } catch (e) {\r\n      alert(`Error has occurred: ${e}`);\r\n    }\r\n  };\r\n  handleClick = async e => {\r\n    e.preventDefault();\r\n    if (this.validateScores()) {\r\n      const { latitude, longitude } = this.state.position;\r\n      const data = {\r\n        location: { latitude, longitude },\r\n        userName: this.state.userName,\r\n        scores: this.state.scores\r\n      };\r\n      try {\r\n        const res = await fetch(this.API_POST, {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(data)\r\n        });\r\n        const json = await res.json();\r\n        if (json.success) {\r\n          window.localStorage.removeItem(\"userName\");\r\n          this.setState({ shouldRedirect: true });\r\n        } else {\r\n          alert(`An error has occurred: ${json.error}`);\r\n        }\r\n      } catch (e) {\r\n        alert(`An error has occurred: ${e}`);\r\n      }\r\n    } else {\r\n      alert(\"Please fill in at least 15 responses!\");\r\n    }\r\n  };\r\n  handleChange = e => {\r\n    const { value, name } = e.target;\r\n    this.setState({ search: { ...this.state.search, [name]: value } });\r\n    let property = name.replace(\"search\", \"\").toLowerCase();\r\n    if (name === \"searchNrCrt\") {\r\n      property = \"nrCrt\";\r\n    }\r\n    if (value !== \"\") {\r\n      this.setState({\r\n        displayAttractions: this.state.attractions.filter(\r\n          attraction =>\r\n            attraction && new RegExp(value, \"gi\").test(attraction[property])\r\n        )\r\n      });\r\n    } else {\r\n      this.setState({\r\n        displayAttractions: this.state.attractions\r\n      });\r\n    }\r\n  };\r\n  setLocation = () => {\r\n    const context = this;\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(position => {\r\n        context.setState({ position: position.coords });\r\n      });\r\n    }\r\n  };\r\n  validateScores = () => {\r\n    return this.state.scores.length >= 15;\r\n  };\r\n  handleRate = (id, rating) => {\r\n    rating /= 5;\r\n    const newScoreStates = this.state.scoreStates;\r\n    newScoreStates[id] = rating;\r\n    this.setState({\r\n      scoreStates: newScoreStates\r\n    });\r\n    const score = {\r\n      attractionId: id,\r\n      rating\r\n    };\r\n\r\n    // Do not allow duplicates. Update the existing record if exists\r\n    this.setState({\r\n      scores: [\r\n        ...this.state.scores.filter(_score => _score.attractionId !== id),\r\n        score\r\n      ]\r\n    });\r\n  };\r\n  updateScore = (e, i) => {\r\n    const rating = e.nativeEvent.offsetX / e.nativeEvent.target.offsetWidth;\r\n    const innerStars = e.target.children[0] ? e.target.children[0] : e.target;\r\n    const newScoreStates = this.state.scoreStates;\r\n    newScoreStates[i] = Math.ceil(rating * 100);\r\n    this.setState({\r\n      scoreStates: newScoreStates\r\n    });\r\n    const score = {\r\n      attractionId: i,\r\n      rating\r\n    };\r\n\r\n    // Do not allow duplicates. Update the existing record if exists\r\n    this.setState({\r\n      scores: [\r\n        ...this.state.scores.filter(_score => _score.attractionId !== i),\r\n        score\r\n      ]\r\n    });\r\n  };\r\n  scrollToTop = ref => {\r\n    ref.current.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n  renderScoresMessage = () => {\r\n    const retval = (\r\n      <div\r\n        className={`scores-message alert alert-${\r\n          this.REQUIRED_SCORES - this.state.scores.length <= 0\r\n            ? \"success\"\r\n            : \"primary\"\r\n        }`}\r\n      >\r\n        {this.REQUIRED_SCORES - this.state.scores.length > 0 ? (\r\n          <div>\r\n            You still have to rate\r\n            <strong>\r\n              {\" \" + (this.REQUIRED_SCORES - this.state.scores.length)} out of\r\n              {\" \" + this.REQUIRED_SCORES + \" \"}\r\n            </strong>\r\n            items.\r\n          </div>\r\n        ) : (\r\n          <div>You can submit!</div>\r\n        )}\r\n      </div>\r\n    );\r\n    return retval;\r\n  };\r\n  renderToolbox = () => {\r\n    return (\r\n      <div className=\"container-fluid toolbox\">\r\n        <div className=\"row\">\r\n          <div className=\"offset-md-9 col-md-3 col-sm-12\">\r\n            <div className=\"card\">\r\n              <div className=\"card-header\">Touristic attractions</div>\r\n              <div className=\"card-body\">\r\n                <p className=\"card-text\">\r\n                  Please provide your opinion on the touristic attractions in\r\n                  the list. To find attractions that you have visited, you can\r\n                  search the list from the header. Thank you for participating!\r\n                </p>\r\n              </div>\r\n              <div className=\"card-footer\">\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  Submit\r\n                </button>\r\n                &nbsp;\r\n                <button\r\n                  className=\"btn btn-secondary float-right\"\r\n                  onClick={() => this.scrollToTop(this.currentRef)}\r\n                >\r\n                  Go to top\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  renderStars = id => {\r\n    // Pretty bad but werks well enough\r\n    return [1, 2, 3, 4, 5].map(j => {\r\n      const currentScore = this.state.scoreStates[id];\r\n      let starClass = \"fa-star-o\";\r\n      if (currentScore && currentScore * 5 >= j) {\r\n        starClass = \"fa-star golden\";\r\n      }\r\n      return (\r\n        <i\r\n          className={`fa ${starClass}`}\r\n          key={id + \".\" + j}\r\n          onClick={e => this.handleRate(id, j)}\r\n        />\r\n      );\r\n    });\r\n  };\r\n}\r\n\r\nexport default FillSurvey;\r\n","import React from \"react\";\r\n\r\nconst ThankYou = props => {\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-12 spacer\" />\r\n      <div className=\"col-md-8 offset-md-2\">\r\n        <div className=\"panel\">\r\n          <h1 className=\"display-3\">Thank you!</h1>\r\n          <p className=\"lead\">\r\n            Please accept my heartfelt thanks for filling out this survey.\r\n            Hopefully together we can build something interesting! Check out the\r\n            project on Github, it's not much yet but we're getting there ;)\r\n          </p>\r\n          <hr className=\"my-4\" />\r\n          <p className=\"lead\">\r\n            <a\r\n              className=\"btn btn-primary\"\r\n              href=\"https://github.com/codepadawan93/ba-thesis-datasets\"\r\n            >\r\n              Learn more\r\n            </a>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThankYou;\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Link, Route } from \"react-router-dom\";\nimport InputName from \"./components/InputName\";\nimport FillSurvey from \"./components/FillSurvey\";\nimport ThankYou from \"./components/ThankYou\";\nimport \"./assets/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.min.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <div className=\"container-fluid\">\n            <Route exact path=\"/\" component={InputName} />\n            <Route exact path=\"/fill-survey\" component={FillSurvey} />\n            <Route exact path=\"/thank-you\" component={ThankYou} />\n          </div>\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}